import { createGlobalState, useDark } from '@vueuse/core'

export const generateHTML = (
  payload: Record<string, any>,
  isDark?: boolean,
) => {
  return `<html class="${isDark ? '' : ''}">
        <head>
            <style id="_style">${payload.css}</style>
            <script type="module" id="_script">
              ${payload.javascript}
            </\script>
        </head>
        <body>
            ${payload.html}
        </body>
    </html>`
}

export const useDarkGlobal = createGlobalState(() => useDark())

export const initialEditorValue = {
  html: '<!DOCTYPE html>\n<html lang="en">\n\n  <head>\n    <meta charset="utf-8" />\n    <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n    <title>Demo</title>\n    <meta name="description" content="" />\n    <meta name="viewport" content="width=device-width, initial-scale=1" />\n    <link rel="icon" type="image/x-icon" href="favicon.ico">\n    <link rel="manifest" href="manifest.json" />\n    <!-- See, `style.css` -->\n  </head>\n\n  <body id="root">\n    <!-- See, `app.js` -->\n  </body>\n</html>',
  javascript: 'import { craft, mount, unmount, render } from "https://unpkg.com/knott@0.2.1/knott.js";\nimport { design } from "https://unpkg.com/artis@1.0.9/artis.js";\n\nconst cssReset = "m:0 p:0 listStyle:none appearance:none";\nconst bodyStyle = `${cssReset} vHeight:100vh display:flex justifyContent:center alignItems:center fontFamily:ubuntu,sans,serif textColor:rgba(0,0,0,1) bgColor:rgba(104,104,104,1) textSize:50`;\n\nconst imageEnhance = `filter:saturate(200%) filter:contrast(110%) filter:brightness(105%)`;\nconst imageQuality = "200";\nconst imageSample = `https://images.pexels.com/photos/173301/pexels-photo-173301.jpeg?auto=compress&cs=tinysrgb&w=800`;\nconst images = [\n  { url: `https://images.pexels.com/photos/1137752/pexels-photo-1137752.jpeg?auto=compress&cs=tinysrgb&w=${imageQuality}` },\n  { url: `https://images.pexels.com/photos/2263686/pexels-photo-2263686.jpeg?auto=compress&cs=tinysrgb&w=${imageQuality}` },\n  { url: `https://images.pexels.com/photos/3284262/pexels-photo-3284262.jpeg?auto=compress&cs=tinysrgb&w=${imageQuality}` },\n  { url: `https://images.pexels.com/photos/2421297/pexels-photo-2421297.jpeg?auto=compress&cs=tinysrgb&w=${imageQuality}` }\n];\nconst users = [\n  { url: `https://i.pravatar.cc/${imageQuality}?=1` },\n  { url: `https://i.pravatar.cc/${imageQuality}?=2` },\n  { url: `https://i.pravatar.cc/${imageQuality}?=3` },\n  { url: `https://i.pravatar.cc/${imageQuality}?=4` },\n];\n\nconst rootVNode = () =>\n  craft("body", { // parent\n    props: { id: "root", class: `${bodyStyle} position:relative overflow:hidden` },\n    expand: [ // child\n      craft("img", {\n        props: { class: "position:absolute top:0 left:0 display:block vHeight:100vh vWidth:100% imageFit:cover imagePosition:center filter:blur(20px) transform:scale(110%)", src: imageSample, loading: "lazy" },\n      }),\n      craft("card", {\n        props: { class: "position:relative m:25 w:450 h:auto bgColor:white curveRadius:30 curveWidth:5 curveColor:rgba(34,34,34,1) curveStyle:inset" },\n        expand: [\n          craft("img", {\n            props: { class: "stack:1 display:block h:250 vWidth:100% imageFit:cover imagePosition:center curveRadius:23 ${imageEnhance}", src: imageSample, loading: "lazy" },\n          }),\n          craft("overlay", {\n            props: { class: "stack:2 position:absolute top:0 left:0 h:250 vWidth:100% bgColor:rgba(1,1,1,0.6) curveRadius:23" },\n          }),\n          craft("title", {\n            props: { class: "stack:3 position:absolute top:20 bottom:20 left:20 right:20 display:block textColor:white" },\n            expand: [\n              craft("title", {\n                props: { class: "display:block textSize:50" },\n                text: "Knott.js",\n              }),\n              craft("description", {\n                props: { class: "display:block textSize:24" },\n                text: "Web Component, Virtual CSS and Virtual DOM",\n              }),\n            ],\n          }),\n          craft("content", {\n            props: { class: "p:25 display:block textSize:24" },\n            text: "Everything runs on the memory, its fast! Start Knott something today!",\n          }),\n          craft("gallery", {\n            props: { class: "pl:10 pr:10 display:flex justifyContent:center alignItems:center" },\n            actions: [\n              ["addWindow", "load", () => {\n                images.forEach((item) => {\n                  const gallery = document.createElement("div");\n                  gallery.innerHTML = `<img class="ml:5 mr:5 h:100 w:100 imageFit:cover imagePosition:center curveRadius:20 ${imageEnhance}" src="${item.url}" alt="" loading="lazy" />`;\n                  document.querySelector("gallery").appendChild(gallery);\n                });\n                design(true);\n              }],\n            ],\n          }),\n          craft("users", {\n            props: { class: "stack:5 position:absolute right:-60 top:0 display:flex flexDirection:column justifyContent:center alignItems:center" },\n            actions: [\n              ["addWindow", "load", () => {\n                users.forEach((item) => {\n                  const users = document.createElement("div");\n                  users.innerHTML = `<img class="mb:4 h:40 w:40 imageFit:cover imagePosition:center curveRadius:60 curveStyle:inset curveWidth:4 curveColor:rgba(115,254,19,1) ${imageEnhance}" src="${item.url}" alt="" loading="lazy" />`;\n                  document.querySelector("users").appendChild(users);\n                });\n                design(true);\n              }],\n            ],\n          }),\n        ],\n      }),\n    ],\n  });\n\nmount("root", render(rootVNode()));\n\ndesign(true); // init artis.js\n',
  css: '/*\n * Knott.js use Virtual CSS for styling without \n * additional CSS payload in your project.\n * Simply, No CSS! Pssst... It is a low-level one!\n * Fine-tuning the utility settings almost infinity.\n *\n * Read more about `Styling` topic at\n * https://knottjs.netlify.app/#styling\n *\n * Virtual CSS has enabled by default in this demo!\n */\n\n/*\n * Or, if you looking for intuitive functional and\n * low-level CSS framework, try out the `WEAVV CSS`.\n *\n * Read the documentation at\n * https://weavvcss.netlify.app\n *\n * Uncomment to use WEAVV CSS.\n */\n\n/* @import "https://unpkg.com/weavvcss@1.0.3/dist/weavv-1.0.3.min.css"; */',
}
